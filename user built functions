Leap year function

def is_year_leap(year):         #Wann ist ein Jahr ein Schaltjahr?
    if year % 4 != 0:           #1. Bedingung: Ist ein Jahr durch 4 teilbar,
        return False            #dann ist es möglicherweise ein Schaltjahr.
    elif year % 100 != 0:       #2.Bedingung: Ist es nicht durch 100 teilbar, 
        return True             #dann ist es ein Schaltjahr. Ist es durch 100 teilbar, dann:
    elif year % 400 != 0:       #3. Bedingung: Ist es auch durch 400 teilbar,
        return False            # dann ist es ein Schaltjahr.
    else:                       #NB:Säkularjahre, also die Jahre, die ein Jahrhundert abschließen 
        return True             #(z. B. 1800, 1900, 2100 und 2200), sind, abgesehen von der folgenden 
                                #Ausnahme, keine Schaltjahre.
                                #Die durch 400 ganzzahlig teilbaren Säkularjahre, zum Beispiel 
                                #das Jahr 2000, sind jedoch Schaltjahre.
 ------------------------------------------------------------------------------------------------------------------------------------------------------------                              

How many days function

def is_year_leap(year):
    if year % 4 != 0:
        return False
    elif year % 100 != 0:
        return True
    elif year % 400 != 0:
        return False
    else:
        return True

def days_in_month(year,month):                      
    if year < 1582 or month < 1 or month > 12:              #The function returns none if it's arguments 
        return None                                         #don't make sense.
    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31] #number of days per month
    res  = days[month - 1]                                  #as days is 0-indexed, indexing the 1st    
    if month == 2 and is_year_leap(year):                   #month is list item 0.
        res = 29                                            #If the previous function is_year_leap returns 
    return res                                              #and the month is 2, return 29 instead of 28 days
